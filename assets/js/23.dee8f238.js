(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{319:function(a,e,t){"use strict";t.r(e);var s=t(4),n=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"booleans-bool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#booleans-bool"}},[a._v("#")]),a._v(" Booleans: bool")]),a._v(" "),e("p",[a._v("The keyword of boolean is "),e("code",[a._v("bool")]),a._v(", not itself.")]),a._v(" "),e("p",[a._v("If a Boolean value is assigned to an integer, true becomes 1 and false becomes 0.")]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 0")]),a._v("\n")])])]),e("p",[a._v("If an integer value is assigned to a Boolean, 0 becomes false and any value that has a "),e("strong",[a._v("non-zero")]),a._v(" value becomes true.")]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("bool")]),a._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("bool")]),a._v(" d "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n")])])]),e("h1",{attrs:{id:"modifier"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modifier"}},[a._v("#")]),a._v(" modifier")]),a._v(" "),e("h2",{attrs:{id:"integer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#integer"}},[a._v("#")]),a._v(" integer")]),a._v(" "),e("p",[a._v("Several of the basic types, including integers, can be modified using one or more of these\ntype modifiers:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("signed")]),a._v(": A signed integer can hold both negative and positive numbers.")]),a._v(" "),e("li",[e("code",[a._v("unsigned")]),a._v(": An unsigned integer can hold only positive values.")]),a._v(" "),e("li",[e("code",[a._v("short")]),a._v(": Half of the default size.")]),a._v(" "),e("li",[e("code",[a._v("long")]),a._v(": Twice the default size.")])]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("signed")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// is equivalent to")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h2",{attrs:{id:"floating"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floating"}},[a._v("#")]),a._v(" floating")]),a._v(" "),e("p",[a._v("Floating point data types are always "),e("code",[a._v("signed")]),a._v(", which means that they have the capability to hold both positive and negative values.")])])}),[],!1,null,null,null);e.default=n.exports}}]);